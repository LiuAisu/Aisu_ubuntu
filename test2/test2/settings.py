"""
Django settings for test2 project.

Generated by 'django-admin startproject' using Django 3.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path
import os
# Build paths inside the project like this: BASE_DIR / 'subdir'.
# 这是项目的根路径
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-7^%37h97#(s!^&i6%+z8$70xyq)#$=7wco4(5&&k3%m&r$lo%$'

# SECURITY WARNING: don't run with debug turned on in production!
# 当网站发布后 需要关闭调试
DEBUG = True
# 这里配置的是 django站点可以投放的地址  即只允许列表中的ip地址访问
# ALLOWED_HOSTS = ['192.168.233.130']
ALLOWED_HOSTS = []
# DEBUG = False
# ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'booktest',
    'tinymce',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # 'booktest.middleware.BlockIPSMiddleware',  # 注册中间件类
    # 'booktest.middleware.TestMiddleware'
]

ROOT_URLCONF = 'test2.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        # 配置时建立各自应用的 html 文件夹！！
        'DIRS': [os.path.join(BASE_DIR, 'templates')],  # 这里设置模板文件目录  配置templates路径
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'test2.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases
# 数据库配置 默认sqlite3
DATABASES = {
    'default': {
        # 'ENGINE': 'django.db.backends.sqlite3',
        # 'NAME': BASE_DIR / 'db.sqlite3',
        # 配置数据库要在init.py加入
        # import pymysql
        # pymysql.install_as_MySQLdb()
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'books',  # 配置数据库名
        'USER': 'aisu',  # 配置数据库 用户
        'PASSWORD': 'ss123456',   # 用户对应的密码
        'HOST': '192.168.0.102',     # 指定数据库ip地址
        'PORT': 3306,   # 数据库端口
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

# 语言配置 默认英文
# LANGUAGE_CODE = 'en-us'
LANGUAGE_CODE = 'zh-hans'#使用中文
# 配置时区
# TIME_ZONE = 'UTC'
TIME_ZONE = 'Asia/Shanghai'  # 没有北京时间 只有上海时间
# python manage.py createsuperuser


USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'

# 设置静态文件的保存目录  js css image等
# 加载过程类似模板   首先在配置的路径找 找不到的话 就去应用下的static文件夹找
# 动态的获取文件配置
# {% load staticfiles %}  先加载路径
# 再动态获取 <image src="{% static '文件的路径' %}"
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# 配置上传文件的保存目录
# 上传文件时 将以media为基文件夹
MEDIA_ROOT = os.path.join('static/media')

"""这里配置使用redis-session
SESSION_ENGINE是 默认存在django的session数据库的
"""
"""SESSION_ENGINE = 'redis_sessions.session'
SESSION_REDIS_HOST = 'localhost'
SESSION_REDIS_PORT = 6379
SESSION_REDIS_DB = 2
SESSION_REDIS_PASSWORD = ''
SESSION_REDIS_PREFIX = 'session'"""
# 下面是最新的配置
"""redis主从配置时 需要给redis增加密码 
要一分从配置文件  并且主从绑定的端口不能相同
增加配置slaveof 192.168.233.130 6379
同时需要 配置 masterauth password
配置主从有助于增加网站效率  通过主redis来写数据   从redis来读数据
"""
# 暂时不使用redis_sessions.session
"""SESSION_ENGINE = 'redis_sessions.session'
SESSION_REDIS = {
    'host': '192.168.233.130',
    'port': 6379,
    'db': 2,
    'password': 'ss123456',
    'prefix': 'session',
    'socket_timeout': 1
}"""

# 使用富文本编辑器需要增加配置 指定其功能
# 需要在urls中增加  tinymce.urls
"""TINYMCE_DEFAULT_CONFIG = {
    'theme': 'advanced',
    'width': 600,
    'height': 400,
}"""
TINYMCE_DEFAULT_CONFIG = {
    'theme': 'silver',
    'width': 600,
    'height': 400,
}
